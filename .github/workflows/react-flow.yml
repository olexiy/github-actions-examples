name: Test Project
on: [push, workflow_dispatch]
env:
    MONGODB_URI: mongodb://localhost:27017/test
    NODE_ENV: production
jobs:
    lint:
      runs-on: ubuntu-latest
      steps:
          - name: Get Code
            uses: actions/checkout@v3
          - name: Install NodeJS
            uses: actions/setup-node@v3
            with:
                node-version: 18   
          - name: Install Dependencies
            run: npm ci
          - name: Run Eslint
            run: npm run lint
    test:
        env:
            MONGO_CLUSTER: mongodb://localhost:27017/test
            NODE_ENV: test
        runs-on: ubuntu-latest
        steps:
            - name: Get Code
              uses: actions/checkout@v3
            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
            - name: Install Dependencies
              run: npm ci
            - name: Run Tests
              run: npm test
            - name: Output value
              run: echo "MONGODB Cluster Name : ${{$MONGO_CLUSTER}}"
    build:
      needs: [test, lint]
      runs-on: ubuntu-latest
      steps:
        - name: Get Code
          uses: actions/checkout@v3
        - name: Cache dependencies
          uses: actions/cache@v3
          with:
              path: ~/.npm
              key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
        - name: Install dependencies
          run: npm ci
        - name: Build website
          run: npm run build
        - name: Upload artifacts
          uses: actions/upload-artifact@v3
          with:
              name: dist-files
              path: dist
    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Get build artifacts
              uses: actions/download-artifact@v3
              with:
                  name: dist-files
            